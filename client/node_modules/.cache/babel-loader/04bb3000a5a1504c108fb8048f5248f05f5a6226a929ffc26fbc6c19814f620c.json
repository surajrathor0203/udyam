{"ast":null,"code":"var _jsxFileName = \"/Users/surajrathor/Desktop/my computer/projects/0penbiz/client/src/pages/registrationPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './registrationPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FORM_SCHEMA = {\n  step1: {\n    title: \"Aadhaar Validation\",\n    fields: [{\n      id: \"aadhaar\",\n      name: \"aadhaar\",\n      label: \"Aadhaar Number\",\n      type: \"text\",\n      placeholder: \"Enter 12-digit Aadhaar number\",\n      validation: {\n        pattern: \"^[0-9]{12}$\",\n        required: true,\n        message: \"Please enter a valid 12-digit Aadhaar number\"\n      }\n    }, {\n      id: \"otp\",\n      name: \"otp\",\n      label: \"OTP\",\n      type: \"text\",\n      placeholder: \"Enter 6-digit OTP\",\n      validation: {\n        pattern: \"^[0-9]{6}$\",\n        required: true,\n        message: \"Please enter a valid 6-digit OTP\"\n      },\n      conditional: true\n    }]\n  },\n  step2: {\n    title: \"PAN Validation\",\n    fields: [{\n      id: \"pan\",\n      name: \"pan\",\n      label: \"PAN Number\",\n      type: \"text\",\n      placeholder: \"Enter PAN number (e.g., ABCDE1234F)\",\n      validation: {\n        pattern: \"^[A-Za-z]{5}[0-9]{4}[A-Za-z]{1}$\",\n        required: true,\n        message: \"Please enter a valid PAN number\"\n      }\n    }, {\n      id: \"panName\",\n      name: \"panName\",\n      label: \"Name as per PAN\",\n      type: \"text\",\n      placeholder: \"Enter name as per PAN card\",\n      validation: {\n        required: true,\n        message: \"Please enter name as per PAN card\"\n      }\n    }]\n  }\n};\nconst RegistrationPage = () => {\n  _s();\n  const [currentStep, setCurrentStep] = useState(1);\n  const [formData, setFormData] = useState({});\n  const [errors, setErrors] = useState({});\n  const [loading, setLoading] = useState(false);\n  const [otpSent, setOtpSent] = useState(false);\n  const validateField = (field, value) => {\n    const {\n      validation\n    } = field;\n    if (validation.required && !value) {\n      return validation.message || \"This field is required\";\n    }\n    if (validation.pattern && value) {\n      const regex = new RegExp(validation.pattern);\n      if (!regex.test(value)) {\n        return validation.message || \"Invalid format\";\n      }\n    }\n    return null;\n  };\n  const handleInputChange = (fieldName, value) => {\n    setFormData(prev => ({\n      ...prev,\n      [fieldName]: value\n    }));\n\n    // Real-time validation\n    const currentStepSchema = FORM_SCHEMA[`step${currentStep}`];\n    const field = currentStepSchema.fields.find(f => f.name === fieldName);\n    if (field) {\n      const error = validateField(field, value);\n      setErrors(prev => ({\n        ...prev,\n        [fieldName]: error\n      }));\n    }\n  };\n  const handleSendOTP = async () => {\n    const aadhaarError = validateField(FORM_SCHEMA.step1.fields[0], formData.aadhaar);\n    if (aadhaarError) {\n      setErrors(prev => ({\n        ...prev,\n        aadhaar: aadhaarError\n      }));\n      return;\n    }\n    setLoading(true);\n    try {\n      // Simulate OTP sending\n      await new Promise(resolve => setTimeout(resolve, 2000));\n      setOtpSent(true);\n      alert(\"OTP sent successfully to your registered mobile number\");\n    } catch (error) {\n      alert(\"Failed to send OTP. Please try again.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleStepSubmit = async () => {\n    const currentStepSchema = FORM_SCHEMA[`step${currentStep}`];\n    const stepErrors = {};\n\n    // Validate all fields in current step\n    currentStepSchema.fields.forEach(field => {\n      if (field.conditional && !otpSent && field.name === 'otp') return;\n      const error = validateField(field, formData[field.name]);\n      if (error) {\n        stepErrors[field.name] = error;\n      }\n    });\n    setErrors(stepErrors);\n    if (Object.keys(stepErrors).length > 0) {\n      return;\n    }\n    setLoading(true);\n    try {\n      // Simulate API call\n      await new Promise(resolve => setTimeout(resolve, 1500));\n      if (currentStep === 1) {\n        setCurrentStep(2);\n        setOtpSent(false);\n      } else {\n        alert(\"Registration completed successfully!\");\n        // Redirect or handle completion\n      }\n    } catch (error) {\n      alert(\"Validation failed. Please try again.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  const renderField = field => {\n    const {\n      id,\n      name,\n      label,\n      type,\n      placeholder,\n      conditional\n    } = field;\n    const value = formData[name] || '';\n    const error = errors[name];\n    if (conditional && name === 'otp' && !otpSent) {\n      return null;\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-field\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: id,\n        className: \"field-label\",\n        children: [label, \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"required\",\n          children: \"*\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: id,\n        name: name,\n        type: type,\n        value: value,\n        placeholder: placeholder,\n        onChange: e => handleInputChange(name, e.target.value),\n        className: `field-input ${error ? 'error' : ''}`,\n        disabled: loading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 19\n      }, this)]\n    }, id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }, this);\n  };\n  const currentStepSchema = FORM_SCHEMA[`step${currentStep}`];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"registration-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"registration-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress-tracker\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: `step ${currentStep >= 1 ? 'active' : ''}`,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"step-number\",\n            children: \"1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"step-title\",\n            children: \"Aadhaar Validation\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `step ${currentStep >= 2 ? 'active' : ''}`,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"step-number\",\n            children: \"2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"step-title\",\n            children: \"PAN Validation\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"form-title\",\n          children: currentStepSchema.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: e => e.preventDefault(),\n          children: [currentStepSchema.fields.map(renderField), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"button-container\",\n            children: [currentStep === 1 && !otpSent && /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: handleSendOTP,\n              disabled: loading || !formData.aadhaar,\n              className: \"btn btn-secondary\",\n              children: loading ? 'Sending...' : 'Send OTP'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 17\n            }, this), (currentStep === 2 || otpSent) && /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: handleStepSubmit,\n              disabled: loading,\n              className: \"btn btn-primary\",\n              children: loading ? 'Validating...' : currentStep === 2 ? 'Complete Registration' : 'Verify OTP'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 203,\n    columnNumber: 5\n  }, this);\n};\n_s(RegistrationPage, \"pnM+bFF13GuBZnL90z8cr4/xDO0=\");\n_c = RegistrationPage;\nexport default RegistrationPage;\nvar _c;\n$RefreshReg$(_c, \"RegistrationPage\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","FORM_SCHEMA","step1","title","fields","id","name","label","type","placeholder","validation","pattern","required","message","conditional","step2","RegistrationPage","_s","currentStep","setCurrentStep","formData","setFormData","errors","setErrors","loading","setLoading","otpSent","setOtpSent","validateField","field","value","regex","RegExp","test","handleInputChange","fieldName","prev","currentStepSchema","find","f","error","handleSendOTP","aadhaarError","aadhaar","Promise","resolve","setTimeout","alert","handleStepSubmit","stepErrors","forEach","Object","keys","length","renderField","className","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","onChange","e","target","disabled","onSubmit","preventDefault","map","onClick","_c","$RefreshReg$"],"sources":["/Users/surajrathor/Desktop/my computer/projects/0penbiz/client/src/pages/registrationPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './registrationPage.css';\n\nconst FORM_SCHEMA = {\n  step1: {\n    title: \"Aadhaar Validation\",\n    fields: [\n      {\n        id: \"aadhaar\",\n        name: \"aadhaar\",\n        label: \"Aadhaar Number\",\n        type: \"text\",\n        placeholder: \"Enter 12-digit Aadhaar number\",\n        validation: {\n          pattern: \"^[0-9]{12}$\",\n          required: true,\n          message: \"Please enter a valid 12-digit Aadhaar number\"\n        }\n      },\n      {\n        id: \"otp\",\n        name: \"otp\",\n        label: \"OTP\",\n        type: \"text\",\n        placeholder: \"Enter 6-digit OTP\",\n        validation: {\n          pattern: \"^[0-9]{6}$\",\n          required: true,\n          message: \"Please enter a valid 6-digit OTP\"\n        },\n        conditional: true\n      }\n    ]\n  },\n  step2: {\n    title: \"PAN Validation\",\n    fields: [\n      {\n        id: \"pan\",\n        name: \"pan\",\n        label: \"PAN Number\",\n        type: \"text\",\n        placeholder: \"Enter PAN number (e.g., ABCDE1234F)\",\n        validation: {\n          pattern: \"^[A-Za-z]{5}[0-9]{4}[A-Za-z]{1}$\",\n          required: true,\n          message: \"Please enter a valid PAN number\"\n        }\n      },\n      {\n        id: \"panName\",\n        name: \"panName\",\n        label: \"Name as per PAN\",\n        type: \"text\",\n        placeholder: \"Enter name as per PAN card\",\n        validation: {\n          required: true,\n          message: \"Please enter name as per PAN card\"\n        }\n      }\n    ]\n  }\n};\n\nconst RegistrationPage = () => {\n  const [currentStep, setCurrentStep] = useState(1);\n  const [formData, setFormData] = useState({});\n  const [errors, setErrors] = useState({});\n  const [loading, setLoading] = useState(false);\n  const [otpSent, setOtpSent] = useState(false);\n\n  const validateField = (field, value) => {\n    const { validation } = field;\n    \n    if (validation.required && !value) {\n      return validation.message || \"This field is required\";\n    }\n    \n    if (validation.pattern && value) {\n      const regex = new RegExp(validation.pattern);\n      if (!regex.test(value)) {\n        return validation.message || \"Invalid format\";\n      }\n    }\n    \n    return null;\n  };\n\n  const handleInputChange = (fieldName, value) => {\n    setFormData(prev => ({\n      ...prev,\n      [fieldName]: value\n    }));\n    \n    // Real-time validation\n    const currentStepSchema = FORM_SCHEMA[`step${currentStep}`];\n    const field = currentStepSchema.fields.find(f => f.name === fieldName);\n    \n    if (field) {\n      const error = validateField(field, value);\n      setErrors(prev => ({\n        ...prev,\n        [fieldName]: error\n      }));\n    }\n  };\n\n  const handleSendOTP = async () => {\n    const aadhaarError = validateField(\n      FORM_SCHEMA.step1.fields[0], \n      formData.aadhaar\n    );\n    \n    if (aadhaarError) {\n      setErrors(prev => ({ ...prev, aadhaar: aadhaarError }));\n      return;\n    }\n\n    setLoading(true);\n    try {\n      // Simulate OTP sending\n      await new Promise(resolve => setTimeout(resolve, 2000));\n      setOtpSent(true);\n      alert(\"OTP sent successfully to your registered mobile number\");\n    } catch (error) {\n      alert(\"Failed to send OTP. Please try again.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleStepSubmit = async () => {\n    const currentStepSchema = FORM_SCHEMA[`step${currentStep}`];\n    const stepErrors = {};\n    \n    // Validate all fields in current step\n    currentStepSchema.fields.forEach(field => {\n      if (field.conditional && !otpSent && field.name === 'otp') return;\n      \n      const error = validateField(field, formData[field.name]);\n      if (error) {\n        stepErrors[field.name] = error;\n      }\n    });\n    \n    setErrors(stepErrors);\n    \n    if (Object.keys(stepErrors).length > 0) {\n      return;\n    }\n\n    setLoading(true);\n    try {\n      // Simulate API call\n      await new Promise(resolve => setTimeout(resolve, 1500));\n      \n      if (currentStep === 1) {\n        setCurrentStep(2);\n        setOtpSent(false);\n      } else {\n        alert(\"Registration completed successfully!\");\n        // Redirect or handle completion\n      }\n    } catch (error) {\n      alert(\"Validation failed. Please try again.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const renderField = (field) => {\n    const { id, name, label, type, placeholder, conditional } = field;\n    const value = formData[name] || '';\n    const error = errors[name];\n    \n    if (conditional && name === 'otp' && !otpSent) {\n      return null;\n    }\n\n    return (\n      <div key={id} className=\"form-field\">\n        <label htmlFor={id} className=\"field-label\">\n          {label} <span className=\"required\">*</span>\n        </label>\n        <input\n          id={id}\n          name={name}\n          type={type}\n          value={value}\n          placeholder={placeholder}\n          onChange={(e) => handleInputChange(name, e.target.value)}\n          className={`field-input ${error ? 'error' : ''}`}\n          disabled={loading}\n        />\n        {error && <span className=\"error-message\">{error}</span>}\n      </div>\n    );\n  };\n\n  const currentStepSchema = FORM_SCHEMA[`step${currentStep}`];\n\n  return (\n    <div className=\"registration-container\">\n      <div className=\"registration-card\">\n        <div className=\"progress-tracker\">\n          <div className={`step ${currentStep >= 1 ? 'active' : ''}`}>\n            <span className=\"step-number\">1</span>\n            <span className=\"step-title\">Aadhaar Validation</span>\n          </div>\n          <div className={`step ${currentStep >= 2 ? 'active' : ''}`}>\n            <span className=\"step-number\">2</span>\n            <span className=\"step-title\">PAN Validation</span>\n          </div>\n        </div>\n\n        <div className=\"form-container\">\n          <h2 className=\"form-title\">{currentStepSchema.title}</h2>\n          \n          <form onSubmit={(e) => e.preventDefault()}>\n            {currentStepSchema.fields.map(renderField)}\n            \n            <div className=\"button-container\">\n              {currentStep === 1 && !otpSent && (\n                <button\n                  type=\"button\"\n                  onClick={handleSendOTP}\n                  disabled={loading || !formData.aadhaar}\n                  className=\"btn btn-secondary\"\n                >\n                  {loading ? 'Sending...' : 'Send OTP'}\n                </button>\n              )}\n              \n              {(currentStep === 2 || otpSent) && (\n                <button\n                  type=\"button\"\n                  onClick={handleStepSubmit}\n                  disabled={loading}\n                  className=\"btn btn-primary\"\n                >\n                  {loading ? 'Validating...' : \n                   currentStep === 2 ? 'Complete Registration' : 'Verify OTP'}\n                </button>\n              )}\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default RegistrationPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}